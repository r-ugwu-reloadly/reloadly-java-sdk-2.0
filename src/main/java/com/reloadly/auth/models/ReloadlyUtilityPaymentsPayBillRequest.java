/*
 * ReloadlySdkLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.reloadly.auth.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ReloadlyUtilityPaymentsPayBillRequest type.
 */
public class ReloadlyUtilityPaymentsPayBillRequest {
    private String subscriberAccountNumber;
    private int amount;
    private int billerId;
    private boolean useLocalAmount;

    /**
     * Default constructor.
     */
    public ReloadlyUtilityPaymentsPayBillRequest() {
    }

    /**
     * Initialization constructor.
     * @param  subscriberAccountNumber  String value for subscriberAccountNumber.
     * @param  amount  int value for amount.
     * @param  billerId  int value for billerId.
     * @param  useLocalAmount  boolean value for useLocalAmount.
     */
    public ReloadlyUtilityPaymentsPayBillRequest(
            String subscriberAccountNumber,
            int amount,
            int billerId,
            boolean useLocalAmount) {
        this.subscriberAccountNumber = subscriberAccountNumber;
        this.amount = amount;
        this.billerId = billerId;
        this.useLocalAmount = useLocalAmount;
    }

    /**
     * Getter for SubscriberAccountNumber.
     * @return Returns the String
     */
    @JsonGetter("subscriberAccountNumber")
    public String getSubscriberAccountNumber() {
        return subscriberAccountNumber;
    }

    /**
     * Setter for SubscriberAccountNumber.
     * @param subscriberAccountNumber Value for String
     */
    @JsonSetter("subscriberAccountNumber")
    public void setSubscriberAccountNumber(String subscriberAccountNumber) {
        this.subscriberAccountNumber = subscriberAccountNumber;
    }

    /**
     * Getter for Amount.
     * @return Returns the int
     */
    @JsonGetter("amount")
    public int getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * @param amount Value for int
     */
    @JsonSetter("amount")
    public void setAmount(int amount) {
        this.amount = amount;
    }

    /**
     * Getter for BillerId.
     * @return Returns the int
     */
    @JsonGetter("billerId")
    public int getBillerId() {
        return billerId;
    }

    /**
     * Setter for BillerId.
     * @param billerId Value for int
     */
    @JsonSetter("billerId")
    public void setBillerId(int billerId) {
        this.billerId = billerId;
    }

    /**
     * Getter for UseLocalAmount.
     * @return Returns the boolean
     */
    @JsonGetter("useLocalAmount")
    public boolean getUseLocalAmount() {
        return useLocalAmount;
    }

    /**
     * Setter for UseLocalAmount.
     * @param useLocalAmount Value for boolean
     */
    @JsonSetter("useLocalAmount")
    public void setUseLocalAmount(boolean useLocalAmount) {
        this.useLocalAmount = useLocalAmount;
    }

    /**
     * Converts this ReloadlyUtilityPaymentsPayBillRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReloadlyUtilityPaymentsPayBillRequest [" + "subscriberAccountNumber="
                + subscriberAccountNumber + ", amount=" + amount + ", billerId=" + billerId
                + ", useLocalAmount=" + useLocalAmount + "]";
    }

    /**
     * Builds a new {@link ReloadlyUtilityPaymentsPayBillRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReloadlyUtilityPaymentsPayBillRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(subscriberAccountNumber, amount, billerId, useLocalAmount);
        return builder;
    }

    /**
     * Class to build instances of {@link ReloadlyUtilityPaymentsPayBillRequest}.
     */
    public static class Builder {
        private String subscriberAccountNumber;
        private int amount;
        private int billerId;
        private boolean useLocalAmount;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  subscriberAccountNumber  String value for subscriberAccountNumber.
         * @param  amount  int value for amount.
         * @param  billerId  int value for billerId.
         * @param  useLocalAmount  boolean value for useLocalAmount.
         */
        public Builder(String subscriberAccountNumber, int amount, int billerId,
                boolean useLocalAmount) {
            this.subscriberAccountNumber = subscriberAccountNumber;
            this.amount = amount;
            this.billerId = billerId;
            this.useLocalAmount = useLocalAmount;
        }

        /**
         * Setter for subscriberAccountNumber.
         * @param  subscriberAccountNumber  String value for subscriberAccountNumber.
         * @return Builder
         */
        public Builder subscriberAccountNumber(String subscriberAccountNumber) {
            this.subscriberAccountNumber = subscriberAccountNumber;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  int value for amount.
         * @return Builder
         */
        public Builder amount(int amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for billerId.
         * @param  billerId  int value for billerId.
         * @return Builder
         */
        public Builder billerId(int billerId) {
            this.billerId = billerId;
            return this;
        }

        /**
         * Setter for useLocalAmount.
         * @param  useLocalAmount  boolean value for useLocalAmount.
         * @return Builder
         */
        public Builder useLocalAmount(boolean useLocalAmount) {
            this.useLocalAmount = useLocalAmount;
            return this;
        }

        /**
         * Builds a new {@link ReloadlyUtilityPaymentsPayBillRequest} object using the set fields.
         * @return {@link ReloadlyUtilityPaymentsPayBillRequest}
         */
        public ReloadlyUtilityPaymentsPayBillRequest build() {
            return new ReloadlyUtilityPaymentsPayBillRequest(subscriberAccountNumber, amount,
                    billerId, useLocalAmount);
        }
    }
}
